{"version":3,"file":"static/js/20.8de15e88.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","pages/Detail.js"],"sourcesContent":["function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","/* 메인 페이지에서 상품 이미지를 클릭했을 때 나오는 상세페이지 */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Nav } from \"react-bootstrap\";\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { useStockContext } from '../App.js';\nimport './Detail.scss';\n\n\nfunction Detail(props){\n\n  // useEffect를 활용하여 mount 끝났을 때, 재고 알림창 띄우기\n  let [alertTop, setAlertTop] = useState(true);\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setAlertTop(false);\n    }, 2000);\n    return () => { clearTimeout(timer) } /* return+함수: 컴포넌트가 사라질 때 타이머를 없애는 코드 추가 */\n  }, [alertTop]); /* [alertTop]: Detail 컴포넌트가 로드될 때+alertTop라는 state가 변경이 될 때만 useEffect()가 실행되도록 함*/\n\n\n  let { id } = useParams(); /* useParams()=현재 URL에 적힌 모든 파라미터를 object형식으로 저장해주는 함수 */\n  let 찾은상품 = props.shoes.find(function(상품){\n    return 상품.id == id\n  });\n  // find() 활용: 현재 URL의 /:id에 적힌 값과 상품의 영구번호(상품.id)가 같은지 비교, 참이면 변수에 저장함 -> 찾은 상품이라는 변수를 이용해 데이터바인딩\n\n\n  let [tab, setTab] = useState(0);\n  let [tabIn, setTabIn] = useState(false); \n  let history = useHistory(); /* 뒤로가기 버튼을 위한 useHistory Hook */\n  let [size, setSize] = useState(''); /* size value 저장 */\n  \n\n  // Detail 컴포넌트 로드시 투명도가 0에서 1로 서서히 증가하는 애니메이션 효과\n  let [fade2, setFade2] = useState('');\n  useEffect(() => {\n    setFade2(\"end\"); /* Detail.scss내부의 클래스를 추가하여 효과 적용 */\n    return () => {\n      setFade2('');\n    }\n  }, []);\n\n  // 'stock' state Context API 사용(App.js)\n  let useStock = useContext(useStockContext);\n\n  return(  \n    <div className={`container detail start ${fade2}`}> {/* 애니메이션 적용 */}\n\n      {/* 알림창 */}\n      { alertTop === true\n        ? (<div className=\"my-alert\"><p>재고가 얼마 남지 않았습니다!</p></div>)\n        : null\n      }\n\n      {/* 상품 card */}\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <img src={`https://dygreen.github.io/React-study/img/shoes${찾은상품.id + 1}.jpg`} width=\"100%\" />\n        </div>\n        <div className=\"col-md-6 mt-4\">\n          <h4 className=\"pt-5\">{찾은상품.title}</h4>\n          <p>{찾은상품.content}</p>\n          <p>{찾은상품.price}원</p>\n\n\n          {/* 재고 */}\n          <Info 찾은상품={찾은상품} />\n\n\n          {/* 사이즈 select box */}\n          <select name=\"size\" class=\"select_box\" onChange={(e) => {\n            let sizeValue = e.target.value;\n            setSize(sizeValue);\n          }}>\n            <option>=== size ===</option>\n            <option value=\"230\">230</option>\n            <option value=\"240\">240</option>\n            <option value=\"250\">250</option>\n            <option value=\"260\">260</option>\n            <option value=\"270\">270</option>\n          </select>\n\n\n          {/* buttons */}\n          <button className=\"btn btn-outline-dark\" onClick={() => {\n            // 사이즈 선택을 안하면 알림창, 하면 장바구니로 정보전달\n            size == ''\n            ? alert(\"사이즈를 선택해주세요!\")\n            : orderInfo();\n\n            function orderInfo(){\n              // 재고가 0보다 크면 -1, 0이면 감소 중단\n              if(useStock[찾은상품.id] > 0){\n                \n                useStock[찾은상품.id]--; /* 재고 -1 */\n                props.dispatch({ /* 상품정보 dispatch */\n                  type:'add', \n                  data: {\n                    id: 찾은상품.id, \n                    name: 찾은상품.title, \n                    quan: 1, \n                    size: size\n                  }\n                }); \n                history.push('/cart'); /* Cart page로 이동 */\n        \n              } else if (useStock[찾은상품.id] === 0){\n                alert(\"재고가 없습니다😢 다른 상품은 어떠세요?\");\n              }\n            }\n          \n            }}>주문하기</button>\n          <button onClick={() => { history.push('/cart')}} className='btn btn-outline-dark' style={{margin: '0 5px'}}>장바구니</button>\n          <button onClick={() => { history.push('/') }} className=\"btn btn-dark\">뒤로가기</button>\n        </div>\n      </div>\n\n\n      {/* tab */}\n      <Nav variant=\"tabs\" defaultActiveKey=\"link-0\" className=\"tabs\">\n        <Nav.Item>\n          <Nav.Link eventKey=\"link-0\" onClick={() => {setTab(0)}}>Info</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey=\"link-1\" onClick={() => {setTab(1)}}>Shipping</Nav.Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Nav.Link eventKey=\"link-2\" onClick={() => {setTab(2)}}>Refund</Nav.Link>\n        </Nav.Item>\n      </Nav>\n      <CSSTransition in={tabIn} classNames=\"tab\" timeout={500}>\n        <TabContent tab={tab} setTabIn={setTabIn}/>\n      </CSSTransition>\n    </div> \n  );\n}\n\n// 재고 데이터 표시 Info 컴포넌트\nfunction Info(props){\n  let useStock = useContext(useStockContext);\n  return (\n    <p>재고: {useStock[props.찾은상품.id]}</p>\n  )\n}\n\n// 탭(tab) 기능\nfunction TabContent({tab}){ /* {tab} => props */\n  let [fade, setFade] = useState('');\n  \n  useEffect(() => {\n    let tabTimer = setTimeout(() => {setFade(\"end\")},100); /* 리액트의 automatic batching 기능을 고려한 setTimeout 코드 */\n    return () => {\n      clearTimeout(tabTimer);\n      setFade('');\n    }\n  }, [tab]);\n\n  return (<div className={`start ${fade} info`}>\n    {[<div>상품정보 내용입니다</div>, <div>배송관련 내용입니다</div>, <div>환불약관 내용입니다</div>][tab]}\n  </div>)\n}\n\nfunction makeProps(state){\n  return {\n    state : state.reducer,\n    alertTop : state.reducer2\n  }\n}\n\n// memo()를 통해 변경이 안 된 컴포넌트의 재렌더링을 방지\nexport default React.memo(connect(makeProps)(Detail));"],"names":["replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","node","classes","split","forEach","c","className","element","classList","remove","setAttribute","baseVal","CSSTransition","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","appliedClasses","appear","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","props","onEntering","_this$resolveArgument2","type","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","current","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","prototype","phase","scrollTop","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","_objectWithoutPropertiesLoose","React","Transition","_extends","defaultProps","propTypes","Info","useStock","useContext","useStockContext","찾은상품","id","TabContent","tab","useState","fade","setFade","useEffect","tabTimer","setTimeout","clearTimeout","connect","state","reducer","alertTop","reducer2","setAlertTop","timer","useParams","shoes","find","상품","setTab","tabIn","setTabIn","history","useHistory","size","setSize","fade2","setFade2","src","width","title","content","price","name","class","onChange","e","sizeValue","target","value","onClick","alert","dispatch","data","quan","push","style","margin","Nav","variant","defaultActiveKey","eventKey","in","timeout"],"sourceRoot":""}